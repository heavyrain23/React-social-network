{"version":3,"sources":["api/api.js","redux/dialogs-reducer.ts","utils/validators/object-helpers.js","redux/users-reducer.ts","assets/images/preloader.svg","components/common/Preloader/preloader.module.css","components/Navbar/Navbar.module.css","components/common/FormsControls/FormsControls.js","components/Navbar/Navbar.jsx","components/Header/Header.jsx","redux/auth-reducer.ts","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.ts","redux/sidebar-reducer.ts","redux/redux-store.ts","hoc/withSuspense.js","App.js","index.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/Header/Header.module.css","components/common/Preloader/Preloader.js","redux/profile-reducer.ts"],"names":["__webpack_require__","d","__webpack_exports__","usersAPI","profileAPI","authAPI","securityAPI","axios__WEBPACK_IMPORTED_MODULE_0__","instance","axios","withCredentials","baseURL","headers","API-KEY","getUsers","currentPage","arguments","length","undefined","pageSize","get","concat","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","Content-Type","saveProfile","profile","me","login","email","password","rememberMe","captcha","logout","getCaptchaUrl","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","Object","C_Users_alex_Desktop_front_end_practic_Samyrai_React_js_course_React_social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","C_Users_alex_Desktop_front_end_practic_Samyrai_React_js_course_React_social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","objectSpread","users","totalUsersCount","isFetching","followingInProgress","followSuccess","toggleIsFetching","toggleFollowingProgress","requestUsers","page","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","sent","count","totalCount","stop","_x","apply","this","followUnfollowFlow","_ref2","_callee2","apiMethod","actionCreator","_context2","resultCode","_x2","_x3","_x4","_x5","_ref3","_callee3","_context3","bind","_x6","_ref4","_callee4","_context4","_x7","usersReducer","followed","toConsumableArray","filter","module","exports","p","preloader","nav","item","activeLink","FormControl","input","_ref$meta","meta","touched","error","children","hasError","react__WEBPACK_IMPORTED_MODULE_1___default","createElement","className","styles","formControl","Textarea","props","restProps","child","C_Users_alex_Desktop_front_end_practic_Samyrai_React_js_course_React_social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","assign","Input","createField","placeholder","validators","component","text","redux_form__WEBPACK_IMPORTED_MODULE_4__","validate","Navbar","react_default","s","NavLink","to","activeClassName","Header","header","src","loginBlock","isAuth","loginText","button","onClick","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","_response$data$data","_login","url","authReducer","HeaderContainer","components_Header_Header","React","Component","connect","auth","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","required","style","formsSummarError","loginButton","stopSubmit","_error","Redirect","loginContainer","initialized","appReducer","sidebarReducer","rootReducer","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","usersPage","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","window","__store__","withSuspense","Suspense","fallback","Preloader","DialogsContainer","lazy","e","ProfileContainer","UsersContainer","App","initializeApp","Header_HeaderContainer","components_Navbar_Navbar","Route","path","render","components_Login_Login","AppContainer","compose","withRouter","promise","Promise","all","SamuraiApp","HashRouter","es","ReactDOM","src_App_0","document","getElementById","maxLengthCreator","value","maxLength","posts","likesCount","newPostText","addPostActionCreator","setStatus","getUserProfile","C_Users_alex_Desktop_front_end_practic_Samyrai_React_js_course_React_social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_alex_Desktop_front_end_practic_Samyrai_React_js_course_React_social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","file","photos","_ref5","_callee5","getState","_context5","abrupt","reject","newPost","C_Users_alex_Desktop_front_end_practic_Samyrai_React_js_course_React_social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_3__","C_Users_alex_Desktop_front_end_practic_Samyrai_React_js_course_React_social_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","postId"],"mappings":"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","file":"static/js/main.8b44f283.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers:     {\r\n        \"API-KEY\": \"3d37f6a3-c0fc-407a-bc64-64abd36c2415\"\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status });\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put('profile', profile);\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe, captcha });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get('security/get-captcha-url');\r\n    }\r\n    \r\n}\r\n\r\n\r\n","\r\nconst SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\ntype DialogType = {\r\n    id: number,\r\n    name: string\r\n}\r\n\r\ntype MessageType = {\r\n    id: number,\r\n    message: string\r\n}\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dmitry'},\r\n        {id: 2, name: 'Andrey'},\r\n        {id: 3, name: 'Viktoria'},\r\n        {id: 4, name: 'Valera'},\r\n        {id: 5, name: 'Anton'},\r\n    ] as Array<DialogType>,\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'how are u'},\r\n        {id: 4, message: 'whats up man'},\r\n        \r\n    ] as Array<MessageType>\r\n    \r\n};\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\nconst dialogsReducer = (state = initialState, action: any): initialStateType => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, { id: 6, message: body }]\r\n\r\n            };\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype sendMessageCreatorActionType = {\r\n    type: typeof SEND_MESSAGE,\r\n    newMessageBody: string\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody: string): sendMessageCreatorActionType => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\n\r\n\r\nexport default dialogsReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from './../utils/validators/object-helpers'\r\nimport { UserType } from \"../types/types\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [ ] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>,\r\n};\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nconst usersReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch(action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\r\n            }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype FollowSuccessActionType = {\r\n    type: typeof FOLLOW\r\n    userId: number\r\n}\r\nexport const followSuccess = (userId: number): FollowSuccessActionType => ({type: FOLLOW, userId })\r\n\r\ntype UnfollowSuccessActionType = {\r\n    type: typeof UNFOLLOW\r\n    userId: number\r\n}\r\nexport const unfollowSuccess = (userId: number): UnfollowSuccessActionType => ({type: UNFOLLOW, userId })\r\n\r\ntype SetUsersActionType = {\r\n    type: typeof SET_USERS\r\n    users: Array<UserType>\r\n}\r\nexport const setUsers = (users: Array<UserType>): SetUsersActionType => ({type: SET_USERS, users })\r\n\r\ntype SetCurrentPageActionType = {\r\n    type: typeof SET_CURRENT_PAGE\r\n    currentPage: number\r\n}\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPageActionType => ({type: SET_CURRENT_PAGE, currentPage })\r\n \r\ntype SetTotalUsersCountActionType = {\r\n    type: typeof SET_TOTAL_USERS_COUNT\r\n    count: number\r\n}\r\nexport const setTotalUsersCount = (totalUsersCount: number): SetTotalUsersCountActionType => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\n\r\ntype ToggleIsFetchingActionType = {\r\n    type: typeof TOGGLE_IS_FETCHING\r\n    isFetching: boolean\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean): ToggleIsFetchingActionType => ({type: TOGGLE_IS_FETCHING, isFetching })\r\n\r\ntype ToggleFollowingProgressActionType = {\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS\r\n    isFetching: boolean\r\n    userId: number\r\n}\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number): ToggleFollowingProgressActionType => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport const requestUsers = (page: number, pageSize: number) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch: any, userId: number, apiMethod: any, actionCreator: any) => {\r\n    dispatch(toggleFollowingProgress(true,userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId: number) => {\r\n    return async (dispatch: any) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId: number) => {\r\n    return async (dispatch: any) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\nexport default usersReducer;","module.exports = __webpack_public_path__ + \"static/media/preloader.6e7c9db7.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__3D30a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1HRaK\",\"item\":\"Navbar_item__3tAJA\",\"activeLink\":\"Navbar_activeLink__106eJ\"};","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                 <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                 <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n        <div className={s.loginBlock}>\r\n            { props.isAuth\r\n            ? <div className = {s.loginText}> <button className = {s.button} onClick={props.logout}>Log out</button> <div> {props.login}</div> </div>\r\n                : <NavLink to={'/login'}>Login</NavLink> }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import { authAPI, securityAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\n\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'samurai-network/auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\n\r\n\r\nexport type initialStateType = {\r\n    userId: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n    isAuth: boolean,\r\n    captchaUrl: string | null\r\n};\r\n\r\nlet initialState: initialStateType = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action: any): initialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype setAuthUserDataPayloadActionType = {\r\n    userId:number | null,\r\n    email:string | null,\r\n    login: string | null, \r\n    isAuth: boolean\r\n}\r\n\r\ntype setAuthUserDataActionType = {\r\n    type: typeof SET_USER_DATA,\r\n    payload: setAuthUserDataPayloadActionType\r\n}\r\n\r\nexport const setAuthUserData = (userId: number | null, email: string | null, login: string | null, isAuth: boolean): setAuthUserDataActionType  => ({\r\n    type: SET_USER_DATA, payload:\r\n        { userId, email, login, isAuth }\r\n});\r\n\r\ntype getCaptchaUrlSuccessActionType = {\r\n    type: typeof GET_CAPTCHA_URL_SUCCESS,\r\n    payload: { captchaUrl: string }\r\n}\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl: string): getCaptchaUrlSuccessActionType => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS, payload:\r\n        {captchaUrl}\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const getAuthUserData = () => async (dispatch: any) => {\r\n    let response = await authAPI.me();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let { id, login, email } = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string) => async (dispatch: any) => {\r\n\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", { _error: message }));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch: any) => {\r\n    let response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch: any) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    \r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n   \r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    \r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input, createField} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from './../common/FormsControls/FormsControls.module.css'\r\nimport s from './Login.css'\r\n\r\nconst LoginForm = ({ handleSubmit, error, captchaUrl }) => {\r\n    return (\r\n        <div>\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, { type: \"password\" })}\r\n            {createField(null, \"rememberMe\", [], Input, { type: \"checkbox\" }, \"remember me\")}\r\n\r\n            {captchaUrl && <img src={captchaUrl} />}\r\n            {captchaUrl && createField(\"Symbols from image\", \"captcha\", [required], Input, {}) }\r\n\r\n            {error && <div className={style.formsSummarError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button className = {style.loginButton}>Login</button>\r\n            </div>\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm =  reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return <div className = {style.loginContainer}> \r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login} )(Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\n\r\nlet initialState: InitialStateType = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype initializedSuccessActionType = {\r\n    type: typeof INITIALIZED_SUCCESS\r\n}\r\n\r\nexport const initializedSuccess = ():initializedSuccessActionType => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    \r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\n\r\nexport default appReducer;","let initialState= {}\r\ntype InitialStateType = typeof initialState\r\n\r\nconst sidebarReducer = (state = initialState,action: any) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\nlet store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n// @ts-ignore\r\nwindow.__store__ = store;\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport Preloader from './../components/common/Preloader/Preloader'\r\n\r\nexport const withSuspense = (Component) => {\r\n\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n             <Component {...props} />\r\n        </React.Suspense>\r\n    };\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport { Route, withRouter } from \"react-router-dom\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { initializeApp } from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/redux-store\"\r\nimport {withSuspense} from \"./hoc/withSuspense\"\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\n\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader />\r\n        }\r\n\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer />\r\n                <Navbar />\r\n                <div className='app-wrapper-content'>\r\n\r\n                    <Route path='/dialogs'\r\n                        render={withSuspense(DialogsContainer)} />\r\n\r\n                    <Route path='/profile/:userId?'\r\n                         render={withSuspense(ProfileContainer)} />\r\n\r\n                    <Route path='/users'\r\n                        render={withSuspense(UsersContainer)} />\r\n\r\n                    <Route path='/login'\r\n                        render={() => <LoginPage />} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, { initializeApp }))(App);\r\n\r\nconst SamuraiApp = (props) => {\r\n    return (\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <AppContainer />\r\n            </Provider>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nexport default SamuraiApp","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SamuraiApp from './App';\r\n\r\nReactDOM.render(<SamuraiApp/>\r\n    , document.getElementById('root'));\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1STgr\",\"loginButton\":\"FormsControls_loginButton__VjfrZ\",\"loginContainer\":\"FormsControls_loginContainer__2ytBK\",\"error\":\"FormsControls_error__3DmmO\",\"formsSummarError\":\"FormsControls_formsSummarError__mjt6O\"};","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return 'Max length is ${maxLength} symbols';\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3zGS0\",\"loginBlock\":\"Header_loginBlock__2P3FW\",\"button\":\"Header_button__5jmKj\",\"loginText\":\"Header_loginText__3BVlx\"};","import preloader from '../../../assets/images/preloader.svg'\r\nimport React from 'react'\r\nimport s from './preloader.module.css'\r\n\r\nlet Preloader = (props) => {\r\n    return <div className = {s.preloader}>\r\n        <img src = {preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport { PostsType, ProfileType, PhotosType } from \"../types/types\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ] as Array<PostsType>,\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n    newPostText: ''\r\n};\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst profileReducer = (state = initialState, action: any): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {...state, profile: {...state.profile, photos: action.photos } as ProfileType}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype addPostActionCreatorType = {\r\n    type: typeof ADD_POST\r\n    newPostText: string\r\n\r\n}\r\nexport const addPostActionCreator = (newPostText: string):addPostActionCreatorType => ({type: ADD_POST, newPostText})\r\n\r\ntype setUserProfileType = {\r\n    type: typeof SET_USER_PROFILE\r\n    profile: ProfileType\r\n}\r\nexport const setUserProfile = (profile: ProfileType):setUserProfileType  => ({type: SET_USER_PROFILE, profile})\r\n\r\ntype setStatusType = {\r\n    type: typeof SET_STATUS\r\n    status: string\r\n}\r\nexport const setStatus = (status: string): setStatusType => ({type: SET_STATUS, status})\r\n\r\ntype deletePostType = {\r\n    type: typeof DELETE_POST\r\n    postId: number\r\n}\r\nexport const deletePost = (postId: number): deletePostType  => ({type: DELETE_POST, postId})\r\n\r\ntype savePhotoSuccessType = {\r\n    type: typeof SAVE_PHOTO_SUCCESS\r\n    photos: PhotosType\r\n} \r\nexport const savePhotoSuccess = (photos: PhotosType):savePhotoSuccessType => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\nexport const getUserProfile = (userId: number) => async (dispatch:any) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId: number) => async (dispatch: any) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status: string) => async (dispatch:any) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\nexport const savePhoto = (file: any) => async (dispatch:any) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\nexport const saveProfile = (profile: ProfileType) => async (dispatch: any, getState: any) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0] }));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}