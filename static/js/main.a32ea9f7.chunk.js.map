{"version":3,"sources":["components/Users/users.module.css","assets/images/preloader.svg","components/common/Preloader/preloader.module.css","components/Profile/Profile.module.css","components/Navbar/Navbar.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Dialogs/Dialogs.module.css","serviceWorker.js","api/api.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/sidebar-reducer.js","utils/validators/object-helpers.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","utils/validators/validators.js","components/common/FormsControls/FormsControls.js","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","components/common/Preloader/Preloader.js","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","App.js","index.js","components/common/FormsControls/FormsControls.module.css","components/common/Paginator/Paginator.module.css","components/Profile/MyPosts/Post/Post.module.css","assets/images/user.png","components/Header/Header.module.css","components/Profile/MyPosts/MyPosts.module.css"],"names":["module","exports","userContainer","userItem","userPhoto","selectedPage","userInfo","button","__webpack_require__","p","preloader","profileWrapper","nav","item","activeLink","descriptionBlock","mainPhoto","editPic","profileContainer","contactsContainer","statusContainer","dialogs","dialog","active","submitForm","messages","Boolean","window","location","hostname","match","instance","axios","withCredentials","baseURL","headers","API-KEY","usersAPI","getUsers","currentPage","arguments","length","undefined","pageSize","get","concat","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","Content-Type","saveProfile","profile","authAPI","email","password","rememberMe","captcha","securityAPI","initialState","posts","id","message","likesCount","setStatus","type","getUserProfile","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","sent","stop","_x","apply","this","profileReducer","state","action","newPost","newPostText","objectSpread","toConsumableArray","filter","postId","photos","name","dialogsReducer","body","newMessageBody","sidebarReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","_ref2","_callee2","apiMethod","actionCreator","_context2","resultCode","_x2","_x3","_x4","_x5","usersReducer","followed","count","login","isAuth","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","_response$data$data","_login","getCaptchaUrl","_ref4","_callee4","_context4","url","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","auth","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","Navbar","react_default","createElement","className","s","NavLink","to","activeClassName","DialogItem","props","path","Message","required","value","maxLengthCreator","maxLength","FormControl","input","_ref$meta","meta","touched","error","children","hasError","styles","formControl","Textarea","restProps","child","objectWithoutProperties","FormsControls_FormControl","assign","Input","createField","placeholder","validators","component","text","Field","validate","maxLength50","reduxForm","onSubmit","handleSubmit","Dialogs","dialogsElements","d","Dialogs_DialogItem_DialogItem","key","messagesElements","m","Dialogs_Message_Message","ClassName","dialogsItems","Dialogs_AddMessageForm_AddMessageForm","values","sendMessage","Redirect","mapStateToPropsForRedirect","compose","connect","sendMessageCreator","Component","RedirectComponent","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","React","Paginator","totalItemsCount","onPageChanged","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","_useState","useState","_useState2","slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","cn","defineProperty","pageNumber","e","User","user","src","small","userInfoContainer","userCountry","container","disabled","some","Users","common_Paginator_Paginator","Users_User","Preloader","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","_this","_this$props","Fragment","common_Preloader_Preloader","components_Users_Users","_ref3","_callee3","_context3","bind","_x6","_x7","page","totalCount","ProfileStatusWithHooks","editMode","setEditMode","_useState3","_useState4","useEffect","onDoubleClick","onChange","currentTarget","autoFocus","onBlur","ProfileDataFormReduxForm","style","formSummaryError","keys","contacts","contact","ProfileData","isOwner","goToEditMode","profileInfoContainer","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo_Contact","contactTitle","contactValue","Contact","ProfileInfo","large","target","files","ProfileInfo_ProfileDataForm","initialValues","ProfileInfo_ProfileData","ProfileInfo_ProfileStatusWithHooks","Post","icon","alt","like","likeCount","maxLength10","AddNewPostFormRedux","MyPosts","postsElements","MyPosts_Post_Post","createRef","postsBlock","addPost","MyPostsContainer","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","params","authorizedUserId","history","refreshProfile","prevProps","prevState","snapshot","components_Profile_Profile","file","_ref5","_callee5","getState","_context5","stopSubmit","_error","abrupt","Promise","reject","withRouter","Header","header","loginBlock","loginText","logout","HeaderContainer","components_Header_Header","LoginReduxForm","formsSummarError","loginButton","loginContainer","App","initializeApp","Header_HeaderContainer","components_Navbar_Navbar","Route","render","DialogsContainer","Profile_ProfileContainer","Users_UsersContainer","components_Login_Login","promise","all","ReactDOM","HashRouter","react_redux_es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a32ea9f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userContainer\":\"users_userContainer__2fuy5\",\"userItem\":\"users_userItem__2nZ2a\",\"userPhoto\":\"users_userPhoto__23ONa\",\"selectedPage\":\"users_selectedPage__aG5gf\",\"userInfo\":\"users_userInfo__1Wmxn\",\"button\":\"users_button__1kdmC\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.6e7c9db7.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__3D30a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrapper\":\"Profile_profileWrapper__1XqVo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1HRaK\",\"item\":\"Navbar_item__3tAJA\",\"activeLink\":\"Navbar_activeLink__106eJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1aw07\",\"mainPhoto\":\"ProfileInfo_mainPhoto__26io5\",\"editPic\":\"ProfileInfo_editPic__odyG7\",\"profileContainer\":\"ProfileInfo_profileContainer__2BQak\",\"contactsContainer\":\"ProfileInfo_contactsContainer__1r-HS\",\"statusContainer\":\"ProfileInfo_statusContainer__3lADf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__D74bV\",\"dialog\":\"Dialogs_dialog__2sE2v\",\"active\":\"Dialogs_active__29_Gx\",\"submitForm\":\"Dialogs_submitForm__1mVnw\",\"messages\":\"Dialogs_messages__2QBbV\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers:     {\r\n        \"API-KEY\": \"3d37f6a3-c0fc-407a-bc64-64abd36c2415\"\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status });\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put('profile', profile);\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe, captcha });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get('security/get-captcha-url');\r\n    }\r\n    \r\n}\r\n\r\n\r\n","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n\r\n        case SAVE_PHOTO_SUCCESS:\r\n            debugger;\r\n            return {...state, profile: {...state.profile, photos: action.photos }}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0] }));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\nexport default profileReducer;","\r\nconst SEND_MESSAGE = \"SEND_MESSAGE\";\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dmitry'},\r\n        {id: 2, name: 'Andrey'},\r\n        {id: 3, name: 'Viktoria'},\r\n        {id: 4, name: 'Valera'},\r\n        {id: 5, name: 'Anton'},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'how are u'},\r\n        {id: 3, message: 'yo nigga'},\r\n        {id: 4, message: 'whats up man'},\r\n        \r\n    ]\r\n    \r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, { id: 6, message: body }]\r\n\r\n            };\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\n\r\n\r\nexport default dialogsReducer;","let initialState= {}\r\n\r\nconst sidebarReducer = (state = initialState,action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from './../utils/validators/object-helpers'\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [ ],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\r\n            }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId })\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true,userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\nexport default usersReducer;","import { authAPI, securityAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'samurai-network/auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload:\r\n        { userId, email, login, isAuth }\r\n});\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS, payload:\r\n        {captchaUrl}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let { id, login, email } = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", { _error: message }));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\nexport default authReducer;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    \r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                 <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                 <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n\r\n    return (\r\n    <div className = {s.dialog}>{props.message}</div>\r\n   \r\n    ) \r\n}\r\n\r\n\r\nexport default Message;","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return 'Max length is ${maxLength} symbols';\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)","import React from \"react\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from '../../common/FormsControls/FormsControls';\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators';\r\nimport s from './AddMessageForm.css'\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                        validate={[required, maxLength50]}\r\n                        placeholder = \"Enter your message\" name = \"newMessageBody\"/>\r\n            </div>\r\n            <div>\r\n                <button className={s.button}>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'dialog-add-message-form'})(AddMessageForm);\r\n\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm'\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} />  );\r\n    let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id} /> );\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} /> ;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div ClassName={s.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{ messagesElements }</div>\r\n            </div>\r\n            <div className = {s.submitForm}>\r\n            <AddMessageForm onSubmit={addNewMessage} />\r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\"\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport {compose} from \"redux\"\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps),withAuthRedirect )(Dialogs)","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\nimport s from \"./Paginator.module.css\"\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={s.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button className ={s.button} onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n            <button className ={s.button} onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport s from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nlet User = ({ user, followingInProgress, unfollow, follow }) => {\r\n    return (\r\n        <div className={s.userContainer}>\r\n            <div className={s.userItem}>\r\n                <span>\r\n\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                            <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                                className={s.userPhoto} />\r\n                        </NavLink>\r\n                    </div>\r\n\r\n                </span>\r\n                <span className={s.userInfoContainer}>\r\n                    <span className={s.userInfo}>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span className={s.userCountry}>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n                <div className={s.container}>\r\n                    {user.followed\r\n                        ? <button className={s.button} disabled={followingInProgress\r\n                            .some(id => id === user.id)}\r\n                            onClick={() => { unfollow(user.id) }}>\r\n                            Unfollow</button>\r\n                        : <button className={s.button} disabled={followingInProgress.some(id => id === user.id)}\r\n                            onClick={() => { follow(user.id) }}>\r\n                            Follow</button>}\r\n\r\n                </div>\r\n            </div>\r\n            <div className={s.userItem}>\r\n                <span>\r\n\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                            <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                                className={s.userPhoto} />\r\n                        </NavLink>\r\n                    </div>\r\n\r\n                </span>\r\n                <span className={s.userInfoContainer}>\r\n                    <span className={s.userInfo}>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span className={s.userCountry}>\r\n                        <div>{\"user.location.country\"}</div>\r\n                        <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button className={s.button} disabled={followingInProgress\r\n                            .some(id => id === user.id)}\r\n                            onClick={() => { unfollow(user.id) }}>\r\n                            Unfollow</button>\r\n                        : <button className={s.button} disabled={followingInProgress.some(id => id === user.id)}\r\n                            onClick={() => { follow(user.id) }}>\r\n                            Follow</button>}\r\n\r\n                </div>\r\n            </div>\r\n        </div>)\r\n\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","import preloader from '../../../assets/images/preloader.svg'\r\nimport React from 'react'\r\nimport s from './preloader.module.css'\r\n\r\nlet Preloader = (props) => {\r\n    return <div className = {s.preloader}>\r\n        <img src = {preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","export const getUsers = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow, toggleFollowingProgress, requestUsers\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            { this.props.isFetching ? <Preloader /> : null }\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                        pageSize={this.props.pageSize}\r\n                        currentPage={this.props.currentPage}\r\n                        onPageChanged={this.onPageChanged}\r\n                        users={this.props.users}\r\n                        follow={this.props.follow}\r\n                        unfollow={this.props.unfollow}\r\n                        followingInProgress={this.props.followingInProgress}\r\n             />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers })\r\n)(UsersContainer)","import React, {useState, useEffect} from 'react';\r\nimport s from './ProfileInfo.module.css'\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className = {s.statusContainer}>\r\n            { !editMode &&\r\n            <div >\r\n                <span onDoubleClick={ activateEditMode }> Status:{props.status || \"-------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode }\r\n                       value={status} />\r\n            </div>\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div><button>save</button></div>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: { createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"} )}\r\n        </div>\r\n\r\n        <div>\r\n            <b>My professional skills</b>:\r\n            { createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea  )}\r\n        </div>\r\n\r\n\r\n        <div>\r\n            <b>About me</b>:\r\n            { createField(\"About me\", \"aboutMe\", [], Textarea  )}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n            <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, { useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto} />\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n                    : <ProfileData goToEditMode={() => { setEditMode(true) }} profile={profile} isOwner={isOwner} />}\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n    return <div className={s.profileContainer}>\r\n       \r\n        <div className={s.profileInfoContainer}>\r\n        {isOwner && <div><button className={s.editPic} onClick={goToEditMode}>edit</button></div>}\r\n            <div>\r\n                <b>Full name</b>: {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n                <div>\r\n                    <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n                </div>\r\n            }\r\n            <div> <b>About me</b>: {profile.aboutMe}</div>\r\n        </div>\r\n        \r\n        <div className={s.contactsContainer}>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n            })}\r\n        </div>\r\n\r\n\r\n    </div>\r\n}\r\n\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n    return  <div className={s.item}>\r\n                <div className = {s.userItem}>\r\n                    <img className = {s.icon} src=\"https://media.wnyc.org/i/800/0/c/85/2019/05/RadioHour-AvaDuverney-4x3.jpg\" alt=\"\" />\r\n                    <div>User Name</div>\r\n                </div>\r\n                \r\n                <div className = {s.message}> {props.message} </div>           \r\n                <span className = {s.like}>Like {props.likeCount}</span> \r\n            </div>       \r\n\r\n}   \r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from './../../../utils/validators/validators'\r\nimport {Textarea} from './../../../components/common/FormsControls/FormsControls'\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea}\r\n                   validate = {[required, maxLength10]} />\r\n        </div>\r\n        <div>\r\n            <button className ={s.button}>Add post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements =\r\n        props.posts.map( p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n           <div> <AddNewPostFormRedux onSubmit={onAddPost} /></div> \r\n            <div className={s.posts}>\r\n              <div> {postsElements}</div>  \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from \"react-redux\"\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport s from \"./Profile.module.css\"\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className = {s.profileWrapper}>\r\n            <ProfileInfo savePhoto={props.savePhoto}\r\n                         isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n                         saveProfile={props.saveProfile}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, updateStatus, saveProfile} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId ) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n       // console.log(\"RENDER PROFILE\");\r\n        return (\r\n            <Profile {...this.props}\r\n                    isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    //console.log('mapStateToProps PROFILE')\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    })\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n\r\n        <div className={s.loginBlock}>\r\n            { props.isAuth\r\n            ? <div className = {s.loginText}> <button className = {s.button} onClick={props.logout}>Log out</button> <div> {props.login}</div> </div>\r\n                : <NavLink to={'/login'}>Login</NavLink> }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input, createField} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from './../common/FormsControls/FormsControls.module.css'\r\nimport s from './Login.css'\r\n\r\nconst LoginForm = ({ handleSubmit, error, captchaUrl }) => {\r\n    return (\r\n        <div>\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, { type: \"password\" })}\r\n            {createField(null, \"rememberMe\", [], Input, { type: \"checkbox\" }, \"remember me\")}\r\n\r\n            {captchaUrl && <img src={captchaUrl} />}\r\n            {captchaUrl && createField(\"Symbols from image\", \"captcha\", [required], Input, {}) }\r\n\r\n            {error && <div className={style.formsSummarError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button className = {style.loginButton}>Login</button>\r\n            </div>\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm =  reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return <div className = {style.loginContainer}> \r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login} )(Login);","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {Route, withRouter} from \"react-router-dom\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Route path='/dialogs'\r\n                           render={() => <DialogsContainer/>}/>\r\n\r\n                    <Route path='/profile/:userId?'\r\n                           render={() => <ProfileContainer/>}/>\r\n\r\n                    <Route path='/users'\r\n                           render={() => <UsersContainer/>}/>\r\n\r\n                    <Route path='/login'\r\n                           render={() => <LoginPage/>}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);","import * as serviceWorker from './serviceWorker';\r\nimport store from \"./redux/redux-store\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </HashRouter>, document.getElementById('root'));\r\n\r\n\r\n// API\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1STgr\",\"loginButton\":\"FormsControls_loginButton__VjfrZ\",\"loginContainer\":\"FormsControls_loginContainer__2ytBK\",\"error\":\"FormsControls_error__3DmmO\",\"formsSummarError\":\"FormsControls_formsSummarError__mjt6O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2FbuL\",\"pageNumber\":\"Paginator_pageNumber__1VKsj\",\"selectedPage\":\"Paginator_selectedPage__1fbgU\",\"button\":\"Paginator_button__2h8_s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__wFqiF\",\"userItem\":\"Post_userItem__Za2k4\",\"message\":\"Post_message__10vBm\",\"like\":\"Post_like__2DNRf\"};","module.exports = __webpack_public_path__ + \"static/media/user.ec4f02e3.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3zGS0\",\"loginBlock\":\"Header_loginBlock__2P3FW\",\"button\":\"Header_button__5jmKj\",\"loginText\":\"Header_loginText__3BVlx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__1RMY0\",\"postsBlock\":\"MyPosts_postsBlock__qieyW\",\"posts\":\"MyPosts_posts__25zau\",\"button\":\"MyPosts_button__3Fih6\"};"],"sourceRoot":""}